import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.util.Calendar;

import com.gtranslate.Language;
import com.gtranslate.Translator;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


public class filter {

	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 12);
	private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 15);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 10);
	private static Font tableFont = new Font(Font.FontFamily.TIMES_ROMAN, 10,
			Font.BOLD);
	private static Font tableFontCell = new Font(Font.FontFamily.TIMES_ROMAN, 7);

	  public static final String RESULT = "filter.pdf";

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		try {
			Document document = new Document(PageSize.A4, 20, 20, 20, 10);
			PdfWriter.getInstance(document, new FileOutputStream(RESULT));
			document.open();
			document.setPageCount(1);
			createTable1(document);
			document.close();
		} catch (Exception e) {
			// TODO: handle exception
		}
		
	

	}

	private static void createTable1(Document subCatPart) throws DocumentException,
			MalformedURLException, IOException {
		
		java.text.DateFormat.getDateTimeInstance().format(
				Calendar.getInstance().getTime());
		Paragraph preface = new Paragraph();
		// We add one empty line1
				// Lets write a big header
		preface.add(new Paragraph(
				"                                                                                ProductionFilterCheck - 06 v1.1",
				subFont));
		preface.add(Chunk.NEWLINE);

		preface.add(new Paragraph(
				"                                                                               \t   Filter Test Report", catFont));
		// Will create: Report generated by: _name, _date
		// preface.add(new Paragraph(
		// "  Report Generated at: " + setterAndGetter.getCurrentDate()+",  "+
		// java.text.DateFormat.getTimeInstance().format(Calendar.getInstance().getTime()),smallBold));
		preface.add(new Paragraph("  Data From to  : ", smallBold));
		preface.add(new Paragraph("  Filter Lot No.  : ", tableFont));
		PdfPTable table = new PdfPTable(2);
		table.setWidthPercentage(100);
		table.getDefaultCell().setBorder(0);
		table.addCell(new Phrase("Observation :-  ", tableFont));
		table.addCell(new Phrase(" ", smallBold));

		table.addCell(new Phrase("  Total Filter Tested :", smallBold));
		table.addCell(new Phrase(" Passed Filter :", smallBold));

		table.addCell(new Phrase("  Filter Type :", smallBold));
		table.addCell(new Phrase(" Wetting Fluid :", smallBold));

		table.addCell(new Phrase("  Max. Flow DF1 :", smallBold));
		table.addCell(new Phrase(" Max. Flow DF2 :", smallBold));

		table.addCell(new Phrase("  Min BP (psi) :", smallBold));
		table.addCell(new Phrase("  ", smallBold));
		

		PdfPTable my_first_table = new PdfPTable(7);
		PdfPCell table_cell;
		float[] columnWidths = new float[] { 6f, 12f, 15f, 15f,15f, 15f, 15f };
		my_first_table.setWidths(columnWidths);
		my_first_table.addCell("Test No.");
		my_first_table.addCell("Test Type");
		my_first_table.addCell(" Location 1");
		my_first_table.addCell(" Location 2");
		my_first_table.addCell(" Location 3");
		my_first_table.addCell(" Location 4");
		my_first_table.addCell(" Location 5");
		// Create a PDFPCell Object
		// table_cell=new PdfPCell(new
		// Phrase("A Cell with Colspan of 2")); // Create a Phrase
		// data for Colspan 2 First Row
		// table_cell.setColspan(2); //Define the colspan for Cell
		// object
		// my_first_table.addCell(table_cell);//push the cell to the
		// table

		/* diffusion flow 1 */
		table_cell = new PdfPCell(new Phrase("A001"));
		table_cell.setRowspan(3);
		table_cell.setRotation(90);
		my_first_table.addCell(table_cell);
		my_first_table.setWidthPercentage(100);
		/* Results df1 */

		my_first_table.addCell("DF1(ml/min)");
		my_first_table.addCell("49 / Pass");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		/* remarks df1 */

		my_first_table.addCell("DF2(ml/min)");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");

		my_first_table.addCell("BP(psi)");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		my_first_table.addCell("");
		/* remarks df2 */
		
		preface.add(table);
		preface.add(my_first_table);
		subCatPart.add(preface);
		
	}
}